package vistas;

import controladores.*;
import controladores.exceptions.NonexistentEntityException;
import jakarta.persistence.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.*;

/**
 *
 * @author Sebastián Candelas Quero
 */
public class VistaLibros extends javax.swing.JFrame {

    private EntityManagerFactory emf = Persistence.createEntityManagerFactory("uniPersistencia");
    ;
    //VistasCrud
    private DialogAniadirAutor aniadirAut;
    //Controladores de las clases
    private ctrlJpaAutor ctrlAutore = new ctrlJpaAutor(emf);
    private ctrlJpaCategoria ctrlCateg = new ctrlJpaCategoria(emf);
    private ctrlJpaLibro ctrlLibro = new ctrlJpaLibro(emf);
    //Modelos de las tablas
    private DefaultTableModel modelLibros = new DefaultTableModel();

    public VistaLibros() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("CRUD Libros - Sebastián Candelas Quero");
        inicModelosTablas();
        inicModelComboBox();
        rellenarTablaLibros(ctrlLibro.obtenerAllLibros());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLibros = new javax.swing.JTable();
        jLabelAutoresCat = new javax.swing.JLabel();
        jComboBoxAutores = new javax.swing.JComboBox<>();
        jLabelCatg = new javax.swing.JLabel();
        jTextFieldCategLibro = new javax.swing.JTextField();
        jMenuBarAutores = new javax.swing.JMenuBar();
        jMenuVolver = new javax.swing.JMenu();
        jMenuAlta = new javax.swing.JMenu();
        jMenuBaja = new javax.swing.JMenu();
        jMenuMod = new javax.swing.JMenu();
        jMenuRefrescar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre"
            }
        ));
        jTableLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLibrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLibros);

        jLabelAutoresCat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelAutoresCat.setText("Libros del autor:");

        jComboBoxAutores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxAutores.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxAutoresItemStateChanged(evt);
            }
        });

        jLabelCatg.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelCatg.setText("Categorías del libro seleccionado: ");

        jTextFieldCategLibro.setEditable(false);

        jMenuVolver.setText("Volver");
        jMenuVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuVolverMouseClicked(evt);
            }
        });
        jMenuBarAutores.add(jMenuVolver);

        jMenuAlta.setText("Alta");
        jMenuAlta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuAltaMouseClicked(evt);
            }
        });
        jMenuBarAutores.add(jMenuAlta);

        jMenuBaja.setText("Baja");
        jMenuBaja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuBajaMouseClicked(evt);
            }
        });
        jMenuBarAutores.add(jMenuBaja);

        jMenuMod.setText("Modificar");
        jMenuMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuModMouseClicked(evt);
            }
        });
        jMenuBarAutores.add(jMenuMod);

        jMenuRefrescar.setText("Refrescar");
        jMenuRefrescar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuRefrescarMouseClicked(evt);
            }
        });
        jMenuBarAutores.add(jMenuRefrescar);

        setJMenuBar(jMenuBarAutores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(jLabelAutoresCat)
                        .addGap(52, 52, 52)
                        .addComponent(jComboBoxAutores, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLabelCatg)
                        .addGap(67, 67, 67)
                        .addComponent(jTextFieldCategLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAutoresCat)
                    .addComponent(jComboBoxAutores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCategLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCatg))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuVolverMouseClicked
        //Cerramos la venta libros
        dispose();
        //Creamos la nueva ventana principal y la mostramos
        Principal principal = new Principal();
        principal.setVisible(true);
    }//GEN-LAST:event_jMenuVolverMouseClicked

    private void jTableLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLibrosMouseClicked
        if (jTableLibros.getSelectedRow() != -1) {
            Set<Categoria> colecCategorias;
            int row = jTableLibros.getSelectedRow();
            Object idLibro = modelLibros.getValueAt(row, 0);
            colecCategorias = ctrlLibro.obtenerLibroXId(idLibro).getCategoriasSet();
            for (Categoria c : colecCategorias) {
                jTextFieldCategLibro.setText(c.getNomCategoria() + "\n");
            }
        }
    }//GEN-LAST:event_jTableLibrosMouseClicked

    private void jComboBoxAutoresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxAutoresItemStateChanged
        String autor = "" + jComboBoxAutores.getSelectedItem();
        if (autor.equals("--Todos--")) {
            rellenarTablaLibros(ctrlLibro.obtenerAllLibros());
        } else {
            rellenarTablaLibros(ctrlLibro.obtenerLibrosAutor(autor));
        }
    }//GEN-LAST:event_jComboBoxAutoresItemStateChanged

    private void jMenuAltaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuAltaMouseClicked
//        aniadirAut = new DialogAniadirAutor(this, rootPaneCheckingEnabled);
//        aniadirAut.setVisible(true);
//        rellenarTablaAutores(ctrlAutores.obtenerAllAutores());
    }//GEN-LAST:event_jMenuAltaMouseClicked

    private void jMenuRefrescarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuRefrescarMouseClicked
        rellenarTablaLibros(ctrlLibro.obtenerAllLibros());
        jComboBoxAutores.setSelectedIndex(0);
    }//GEN-LAST:event_jMenuRefrescarMouseClicked

    private void jMenuBajaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuBajaMouseClicked
        if (jTableLibros.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un libro de la tabla para dar de baja");
        } else {
            int selec = JOptionPane.showConfirmDialog(null, "¿Seguro que desea borrar el libro seleccionado?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (selec == JOptionPane.YES_OPTION) {
                Object idLibro = modelLibros.getValueAt(jTableLibros.getSelectedRow(), 0);
                Libro libro = ctrlLibro.obtenerLibroXId(idLibro);
                ctrlLibro.baja(libro);
                rellenarTablaLibros(ctrlLibro.obtenerAllLibros());

            } else {
                JOptionPane.showMessageDialog(null, "Baja cancelada");
            }
        }
    }//GEN-LAST:event_jMenuBajaMouseClicked

    private void jMenuModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuModMouseClicked

    }//GEN-LAST:event_jMenuModMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaLibros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxAutores;
    private javax.swing.JLabel jLabelAutoresCat;
    private javax.swing.JLabel jLabelCatg;
    private javax.swing.JMenu jMenuAlta;
    private javax.swing.JMenu jMenuBaja;
    private javax.swing.JMenuBar jMenuBarAutores;
    private javax.swing.JMenu jMenuMod;
    private javax.swing.JMenu jMenuRefrescar;
    private javax.swing.JMenu jMenuVolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLibros;
    private javax.swing.JTextField jTextFieldCategLibro;
    // End of variables declaration//GEN-END:variables

    private void inicModelosTablas() {
        //Tabla libros
        modelLibros.addColumn("Id");
        modelLibros.addColumn("Titulo");
        modelLibros.addColumn("Fecha Publicación");
        modelLibros.addColumn("Precio");
        jTableLibros.setModel(modelLibros);
    }

    private void rellenarTablaLibros(List<Libro> colecLibros) {
        modelLibros.setRowCount(0);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        for (Libro l : colecLibros) {
            Object[] fila = {l.getIdLibros(), l.getTitulo(), sdf.format(l.getFechaPublicacion()), l.getPrecio()};
            modelLibros.addRow(fila);
        }
    }

    private void inicModelComboBox() {
        jComboBoxAutores.removeAllItems();
        jComboBoxAutores.addItem("--Todos--");
        for (Autor a : ctrlAutore.obtenerAllAutores()) {
            jComboBoxAutores.addItem(a.getNomAutor());
        }
    }

//    public static Autor getModAutor(){
//        Autor autor = null;
//        EntityManager
//        ctrlJpaAutor ctrlStatic = new ctrlJpaAutor(emf);
//        autor = ctrlAutores.obtenerAutorXId(modelAutores.getValueAt(jTableAutores.getSelectedRow(), 0));
//        return autor;
//    }
}
